version: '3.3'
services:
#  ombi:
#    image: "linuxserver/ombi"
#    restart: unless-stopped
#    ports:
#     - 3579:3579
#    expose:
#     - "3579"
#    volumes:
#     - ombi_config:/config
#    environment:
#      - TZ=${MY_TZ:-SUBFAIL}
#      - VIRTUAL_HOST=request.${DNS_SUFFIX:-local}
#      - LETSENCRYPT_HOST=request.${DNS_SUFFIX:-local}
#      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
#    networks:
#      - reverse-proxy
#    labels:
#      container_group: plex

  radarr:
    image: "linuxserver/radarr:latest"
    restart: unless-stopped
    expose:
     - "7878"
    volumes:
     - radarr_config:/config
     - radarr_downloads:/data/complete/radarr
     - radarr_movies:/movies
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
      - VIRTUAL_HOST=radarr.${DNS_SUFFIX:-local}
      - LETSENCRYPT_HOST=radarr.${DNS_SUFFIX:-local}
      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.radarr.loadbalancer.server.port=7878" #needed if multiple ports are exposed

      # internal route for internal ips
      - "traefik.http.routers.radarr2.tls=true"
      - "traefik.http.routers.radarr2.tls.certresolver=myresolver"
      - "traefik.http.routers.radarr2.rule=Host(`radarr.${DNS_SUFFIX:-local}`) && HeadersRegexp(`X-Real-Ip`, `${TRAEFIK_INTERNAL_IPS:-SUBFAIL}`)"
      - "traefik.http.routers.radarr2.priority=100"
      - "traefik.http.routers.radarr2.entrypoints=websecure"
      # default route for external basic auth
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.radarr.priority=90"
      - "traefik.http.routers.radarr.middlewares=myauth"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"

  jackett:
    image: "linuxserver/jackett:latest"
    restart: unless-stopped
    expose:
     - "9117"
    volumes:
     - jackett_config:/config
     - jackett_downloads:/downloads
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
      - VIRTUAL_HOST=jackett.${DNS_SUFFIX:-local}
      - LETSENCRYPT_HOST=jackett.${DNS_SUFFIX:-local}
      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.jackett.loadbalancer.server.port=9117" #needed if multiple ports are exposed

      # internal route for internal ips
      - "traefik.http.routers.jackett2.tls=true"
      - "traefik.http.routers.jackett2.tls.certresolver=myresolver"
      - "traefik.http.routers.jackett2.rule=Host(`jackett.${DNS_SUFFIX:-local}`) && HeadersRegexp(`X-Real-Ip`, `${TRAEFIK_INTERNAL_IPS:-SUBFAIL}`)"
      - "traefik.http.routers.jackett2.priority=100"
      - "traefik.http.routers.jackett2.entrypoints=websecure"
      # default route for external basic auth
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.jackett.priority=90"
      - "traefik.http.routers.jackett.middlewares=myauth"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"

  headphones:
    image: "linuxserver/headphones:latest"
    restart: unless-stopped
    expose:
     - "8181"
    volumes:
     - headphones_config:/config
     - headphones_downloads:/data/complete/headphones
     - headphones_music:/music
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
      - VIRTUAL_HOST=headphones.${DNS_SUFFIX:-local}
      - LETSENCRYPT_HOST=headphones.${DNS_SUFFIX:-local}
      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.headphones.loadbalancer.server.port=8181" #needed if multiple ports are exposed

      # internal route for internal ips
      - "traefik.http.routers.headphones2.tls=true"
      - "traefik.http.routers.headphones2.tls.certresolver=myresolver"
      - "traefik.http.routers.headphones2.rule=Host(`headphones.${DNS_SUFFIX:-local}`) && HeadersRegexp(`X-Real-Ip`, `${TRAEFIK_INTERNAL_IPS:-SUBFAIL}`)"
      - "traefik.http.routers.headphones2.priority=100"
      - "traefik.http.routers.headphones2.entrypoints=websecure"
      # default route for external basic auth
      - "traefik.http.routers.headphones.tls=true"
      - "traefik.http.routers.headphones.rule=Host(`headphones.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.headphones.priority=90"
      - "traefik.http.routers.headphones.middlewares=myauth"
      - "traefik.http.routers.headphones.entrypoints=websecure"
      - "traefik.http.routers.headphones.tls.certresolver=myresolver"

  sonarr:
    image: "linuxserver/sonarr:latest"
    restart: unless-stopped
    expose:
     - "8989"
    volumes:
     - sonarr_config:/config
     - sonarr_downloads:/data/complete/sonarr
     - sonarr_tv:/tv
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
      - VIRTUAL_HOST=sonarr.${DNS_SUFFIX:-local}
      - LETSENCRYPT_HOST=sonarr.${DNS_SUFFIX:-local}
      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989" #needed if multiple ports are exposed

      # internal route for internal ips
      - "traefik.http.routers.sonarr2.tls=true"
      - "traefik.http.routers.sonarr2.tls.certresolver=myresolver"
      - "traefik.http.routers.sonarr2.rule=Host(`sonarr.${DNS_SUFFIX:-local}`) && HeadersRegexp(`X-Real-Ip`, `${TRAEFIK_INTERNAL_IPS:-SUBFAIL}`)"
      - "traefik.http.routers.sonarr2.priority=100"
      - "traefik.http.routers.sonarr2.entrypoints=websecure"
      # default route for external basic auth
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.sonarr.priority=90"
      - "traefik.http.routers.sonarr.middlewares=myauth"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"


  librarian:
    image: "linuxserver/lazylibrarian:latest"
    restart: unless-stopped
    expose:
     - "5299"
    volumes:
     - librarian_config:/config
     - librarian_completed_downloads:/downloads
     - calibre_library:/books:ro
     - type: volume
       source: audiobooks
       target: /media/audiobooks
       volume:
         read_only: false
         nocopy: true
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
      - VIRTUAL_HOST=librarian.${DNS_SUFFIX:-local}
      - LETSENCRYPT_HOST=librarian.${DNS_SUFFIX:-local}
      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
    networks:
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.librarian.loadbalancer.server.port=5299" #needed if multiple ports are exposed

      # internal route for internal ips
      - "traefik.http.routers.librarian2.tls=true"
      - "traefik.http.routers.librarian2.tls.certresolver=myresolver"
      - "traefik.http.routers.librarian2.rule=Host(`librarian.${DNS_SUFFIX:-local}`) && HeadersRegexp(`X-Real-Ip`, `${TRAEFIK_INTERNAL_IPS:-SUBFAIL}`)"
      - "traefik.http.routers.librarian2.priority=100"
      - "traefik.http.routers.librarian2.entrypoints=websecure"
      # default route for external basic auth
      - "traefik.http.routers.librarian.tls=true"
      - "traefik.http.routers.librarian.rule=Host(`librarian.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.librarian.priority=90"
      - "traefik.http.routers.librarian.middlewares=myauth"
      - "traefik.http.routers.librarian.entrypoints=websecure"
      - "traefik.http.routers.librarian.tls.certresolver=myresolver"

networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  back:
    driver: bridge

volumes:
  ombi_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/ombi"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  radarr_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/radarr/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  radarr_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/radarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  radarr_movies:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/video/Movies"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  jackett_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/jackett/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  jackett_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!watch"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/headphones/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/headphones"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_music:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/music"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_blackhole:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!watch"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/sonarr/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/sonarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_tv:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/video/TV"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  librarian_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/librarian"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  librarian_completed_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  calibre_library:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/books/Calibre\ Portable/Calibre\ Library"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  audiobooks:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/books/Audio\ books"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}


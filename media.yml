version: '3.3'
services:
# stop and remove just one service docker-compose -f media.yml rm -s -v calibre
#  ombi:
#    image: "linuxserver/ombi"
#    restart: unless-stopped
#    ports:
#     - 3579:3579
#    expose:
#     - "3579"
#    volumes:
#     - ombi_config:/config
#    environment:
#      - TZ=${MY_TZ:-SUBFAIL}
#      - VIRTUAL_HOST=request.${DNS_SUFFIX:-local}
#      - LETSENCRYPT_HOST=request.${DNS_SUFFIX:-local}
#      - LETSENCRYPT_EMAIL=${LETS_ENC_EMAIL:-SUBFAIL}
#    networks:
#      - reverse-proxy
#    labels:
#      container_group: plex

  radarr:
    image: "linuxserver/radarr:latest"
    restart: unless-stopped
    expose:
     - "7878"
    volumes:
     - radarr_config:/config
     - radarr_downloads:/data/complete/radarr
     - radarr_movies:/movies
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001

    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.radarr.loadbalancer.server.port=7878" #needed if multiple ports are exposed

      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.radarr.priority=90"
      - "traefik.http.routers.radarr.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"

  lidarr:
    image: "linuxserver/lidarr:latest"
    restart: unless-stopped
    expose:
     - "8686"
    volumes:
     - lidarr_config:/config
     - lidarr_downloads:/data/complete/lidarr
     - lidarr_music:/music
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001

    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686" #needed if multiple ports are exposed

      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.lidarr.priority=90"
      - "traefik.http.routers.lidarr.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=myresolver"


  jackett:
    image: "linuxserver/jackett:latest"
    restart: unless-stopped
    expose:
     - "9117"
    volumes:
     - jackett_config:/config
     - jackett_downloads:/downloads
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=1001
      - PGID=1001

    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.jackett.loadbalancer.server.port=9117" #needed if multiple ports are exposed

      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.jackett.priority=90"
      - "traefik.http.routers.jackett.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"

  headphones:
    image: "linuxserver/headphones:latest"
    restart: unless-stopped
    expose:
     - "8181"
    volumes:
     - headphones_config:/config
     - headphones_downloads:/data/complete/headphones
     - headphones_music:/music
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.headphones.loadbalancer.server.port=8181" #needed if multiple ports are exposed

      - "traefik.http.routers.headphones.tls=true"
      - "traefik.http.routers.headphones.rule=Host(`headphones.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.headphones.priority=90"
      - "traefik.http.routers.headphones.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.headphones.entrypoints=websecure"
      - "traefik.http.routers.headphones.tls.certresolver=myresolver"

  sonarr:
    image: "linuxserver/sonarr:latest"
    restart: unless-stopped
    expose:
     - "8989"
    volumes:
     - sonarr_config:/config
     - sonarr_downloads:/data/complete/sonarr
     - sonarr_tv:/tv
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=0
      - PGID=1001
    networks:
      - back
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989" #needed if multiple ports are exposed

      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.sonarr.priority=90"
      - "traefik.http.routers.sonarr.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"

  # htpcmanager:
  #   image: "linuxserver/htpcmanager:latest"
  #   restart: unless-stopped
  #   expose:
  #    - "8085"
  #   volumes:
  #    - htpcmanager_config:/config
  #   environment:
  #     - TZ=${MY_TZ:-SUBFAIL}
  #     - PUID=1001
  #     - PGID=1001
  #   networks:
  #     - back
  #     - reverse-proxy
  #   labels:
  #     - "container_group=media"
  #     - "traefik.enable=true"

  #     - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
  #     - "traefik.http.services.htpcmanager.loadbalancer.server.port=8085" #needed if multiple ports are exposed

  #     - "traefik.http.routers.htpcmanager.tls=true"
  #     - "traefik.http.routers.htpcmanager.rule=Host(`htpc.${DNS_SUFFIX:-local}`)"
  #     - "traefik.http.routers.htpcmanager.middlewares=middlewares-secured-oauth"
  #     - "traefik.http.routers.htpcmanager.entrypoints=websecure"
  #     - "traefik.http.routers.htpcmanager.tls.certresolver=myresolver"


  librarian:
    image: "linuxserver/lazylibrarian:latest"
    restart: unless-stopped
    expose:
     - "5299"
    volumes:
     - librarian_config:/config
     - librarian_completed_downloads:/downloads
     - calibre_library:/books
     - type: volume
       source: audiobooks
       target: /media/audiobooks
       volume:
         read_only: false
         nocopy: true
    environment:
      - TZ=${MY_TZ:-SUBFAIL}
      - PUID=1003
      - PGID=1001
      - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg
    networks:
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"

      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.librarian.loadbalancer.server.port=5299" #needed if multiple ports are exposed

      - "traefik.http.routers.librarian.tls=true"
      - "traefik.http.routers.librarian.rule=Host(`librarian.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.librarian.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.librarian.entrypoints=websecure"
      - "traefik.http.routers.librarian.tls.certresolver=myresolver"
  
  calibre-web:
    image: linuxserver/calibre-web
    restart: unless-stopped
    expose:
      - "8083"
    environment:
      - PUID=1003
      - PGID=1001
      - TZ=${MY_TZ:-SUBFAIL}
    volumes:
      - calibre-web:/config
      - calibre_library:/books:nocopy
    networks:
      - reverse-proxy
      - smtp
    labels:
      - "container_group=media"
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.routers.library.tls.certresolver=myresolver"
      - "traefik.http.routers.library.rule=Host(`library.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.library.entrypoints=websecure"

  calibre:
    image: linuxserver/calibre
    environment:
      - PUID=1003
      - PGID=1001
      - TZ=${MY_TZ:-SUBFAIL}
#      - GUAC_USER=abc #optional
#      - GUAC_PASS=900150983cd24fb0d6963f7d28e17f72 #optional
#      - UMASK_SET=022 #optional
#      - CLI_ARGS=--enable-auth --disable-use-bonjour #make sure to add a user for lazy libraryian
    volumes:
      - calibre_config:/config
      - calibre_library:/library
      - calibre_scratch:/import
    networks:
      - reverse-proxy
      - smtp
    # ports:
    #   - 8080:8080
    #   - 8081:8081
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.calibre.loadbalancer.server.port=8080" #needed if multiple ports are exposed
      - "traefik.http.routers.calibre.tls=true"
      - "traefik.http.routers.calibre.rule=Host(`calibre.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.calibre.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.calibre.entrypoints=websecure"
      - "traefik.http.routers.calibre.tls.certresolver=myresolver"

  transmission:
    image: "haugene/transmission-openvpn"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
     - "9999:9999" #web proxy
    expose:
     - "9091"
    dns:
     - 8.8.8.8
    volumes:
     - transmission_completed_downloads:/data/complete
     - transmission_watch:/data/watch
     - transmission_incomplete_downloads:/data/incomplete
    environment:
      - OPENVPN_PROVIDER=${VPN_OPENVPN_PROVIDER:-SUBFAIL}
      - OPENVPN_CONFIG=${VPN_OPENVPN_CONFIG:-SUBFAIL}
      - OPENVPN_USERNAME=${VPN_OPENVPN_USERNAME:-SUBFAIL}
      - OPENVPN_PASSWORD=${VPN_OPENVPN_PASSWORD:-SUBFAIL}
      - OPENVPN_OPTS=--pull-filter ignore ping
#      - CREATE_TUN_DEVICE=true
      - DROP_DEFAULT_ROUTE=true
      - TRANSMISSION_UMASK=0
      - TRANSMISSION_DOWNLOAD_DIR=/data/complete
      - TRANSMISSION_WATCH_DIR=/data/watch
      - TRANSMISSION_WATCH_DIR_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=50
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=3
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=true
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_RATIO_LIMIT=1
      - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=false
      - TRANSMISSION_SPEED_LIMIT_DOWN=100
      - WEBPROXY_ENABLED=false
      - WEBPROXY_PORT=9999
      - TZ=${MY_TZ:-SUBFAIL}
      - TRANSMISSION_INCOMPLETE_DIR=/data/incomplete
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
    networks:
      - reverse-proxy
    labels:
      - "container_group=media"
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy" #needed if there are multiple networks attached to this container
      - "traefik.http.services.transmission.loadbalancer.server.port=9091" #needed if multiple ports are exposed
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${DNS_SUFFIX:-local}`)"
      - "traefik.http.routers.transmission.middlewares=middlewares-secured-oauth"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=myresolver"

networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  smtp:
    external:
      name: smtp
  back:
    driver: bridge

volumes:
  ombi_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/ombi"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  htpcmanager_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/htpcmanager"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  radarr_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/radarr/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  radarr_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/radarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  radarr_movies:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/video/Movies"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  lidarr_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/lidarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  lidarr_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/lidarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  lidarr_music:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/music"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}


  jackett_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/jackett/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  jackett_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!watch"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/headphones/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/headphones"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  headphones_music:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/music"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_blackhole:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!watch"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/sonarr/config"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/sonarr"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  sonarr_tv:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/video/TV"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  librarian_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/librarian"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  librarian_completed_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  calibre_library:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/books/Calibre\ Portable/Calibre\ Library"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

  audiobooks:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/books/Audio\ books"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  
  transmission_completed_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  transmission_incomplete_downloads:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!incomplete"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  transmission_watch:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/scratch/!torrent/!watch"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  calibre-web:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/calibre-web"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  calibre_library:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX:-SUBFAIL}/books/Calibre\ Portable/Calibre\ Library"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  calibre_config:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/containers/calibre"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}
  calibre_scratch:
    driver: "local"
    driver_opts:
      device: "${VOL_DEVICE_PREFIX_SSD:-SUBFAIL}/scratch/calibre_import"
      type: ${VOL_TYPE:-SUBFAIL}
      o: ${VOL_OPS:-SUBFAIL}

